<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxMSEhUSEhIWFRUVFRUVFRUVFRcVFRYVFRUWFhUVGBUY
        HSggGBolGxUVITEhJSkrLi4uFx8zODMtNygtLiv/2wBDAQoKCg4NDhoQEBsrHx0lLS0tLS0tLSsrLS0r
        LS0tLS0tKy0tLS0rLS0tLS0tLS0rLS0tLS0tLS0tLS0tLS0tLSv/wAARCAC3ARMDASIAAhEBAxEB/8QA
        GwAAAQUBAQAAAAAAAAAAAAAABAACAwUGAQf/xABGEAABAwIDBAYHBQQKAQUAAAABAAIDBBEFITEGEkFR
        ImFxgZGhExRSkrHR8DJCU8HhFWKi0gcWI0NEVHKCk/FjM3ODsuL/xAAaAQACAwEBAAAAAAAAAAAAAAAA
        AgEDBAUG/8QAMREAAgIBAwIDBgcAAwEAAAAAAAECEQMEEiExURNBYQUUIoGR0TJCUnGhseEV8PEG/9oA
        DAMBAAIRAxEAPwCRsblM1jlYNjClbGFJJXNY5PDXKxEYT/RhRYFW4kIKorHDRW9Uzgoo6IHVMmiHfkV+
        B1EjpxfRelwfZCyWF0TWyAha0mze5Q2iFZxk4ug8WqRunNZ+txbcltdCV+Jbw1TpCsBwzEtyoIJyJXot
        FVhzQbryIxHfv1rUYVipYLEp5cirg3M8wVXW1YaLqmkxm5ABT6992E9SqaHTHxYw0nVXFHUhy84Y+xV/
        heIEJXjslSNY52akqXdE9irKOq379qOldklSofqZWa++e1LeKsJYxclUWL4q2PimIDDIRqVG+uaNXLE1
        20/IqthxKSZ2626mgPQjizPaTX4qwj7Sp6TAHltze6e/AXaZqdou42uEytLcimYueS8/lxaWiNnX3ean
        h2xDyLlLQyaNISUxznKXD6tkouEWYgoGKtznKNznK0MQTTEEAUNW42WfqSbrZVkIssvXR5qJDxK4qMhE
        lqhISDmlovsN7ElyjPQb2LiUDQtClATGhPCvZnHBPTQulQBA5typ2x2CG380U1+SyZHm8TjoWx27eepP
        h7emtDIOj3KgoD0loWG4WtFR5zjVJIZiQMkO2ll5L0Cpomk3suQ0TRwTb6I2owQoX+ynGlk9lbx9I3ku
        CkbyRvDajBx00gcDu6K5e87lnDgtGaVvJU1ewBwA4lPD42ZNXl8GG5GYqKB+rRkpKaKQcFt4KUbuii9T
        G9ojcWQT2psr8BDrHeFs1eTrkEAbdD4pNYZDgVX1Zf0RR4xXtYDmvKtoMTL3kAq22ixCVz3ANda/JZOW
        CQuJLXeCvlhcOWUwzqfCJGRjir3ZLdEuaz7Y5B90+CkpXysdvBp8EpYz3BkrRHcWum4ZPvE79l5pHtJJ
        u23XA9ifDtJI03s7wQLRo/6QomGEnK68rNxmCrzHMYmny3XWVJJG4atI7kEo2Gx2JG4BK9HY64BXlux9
        Md4FeoQizQqmWo6Uwp7kwqBgWr0WVxDVaqq0WWxHVLIaIAVC7VTlQuSDl/RnoN7F1R0h6DexJQBqguhc
        XQrjOPCRSC47RAAcuqIiKhkCkiQSEMm3c0ZFjIGV1WSDJVNbCdUEGuOMs5hdGLs5rzt7zzK6JDzKAPQz
        izfaC5+1W81576Q8yueldzKgD0M4m08VVVFW30gWYpZHX1KlqXla8EPhcjge1NS/Ghhj3Rt4MSbbVdGI
        NvqvO/Tu5ldE7uZWVs7sY8I9KhrA69ih62YZLP7MSEh1zxUe0kxDm2PNRY9B0tJG43sFEcLiPALP+sO9
        opesP9op3kbK1jS6F8cKi9kJpwmL2R5KlZM/m5ObI+2pS7h9poabAInfdCfVbORtz3Qo8FrrCzj4qfFa
        27SAU9OrKt8bor/2PF7IQWIYJGdAEIZ38ynxyPJzJS7i3aE4RhbWHIK7QdJoid5KMdcVGV0lNKCSCp0W
        WxHVaio0KzGJapZDRAConqQqNyUct6V3QCSjpndEJJSaNmuhcSCvMw9NkOS6o59EMldQGaozREL7qqqI
        zdG0ipxubfJszwxqC29Q1hzUstKCEODZTtlyV5jooKmjAK4KVWM7c022ShhRXGmXPVkc4JhCgBtJSXXK
        qnsiYpLBQzS3KsWRqO0yT0eOeVZWuUBimTxTIhpUgKrNYbgEdg7tUeORbzm96Iwt2R7U3ETdwQBVNpLp
        /qnJGRlFQxXz4czkP1Sy4GSBKfDrjXPvV7h+Abwu5wHIW3j2pQRhg3n5t4ZhvmUTHXQk9EdH2y4gX4je
        uAcgNL6qcOJzdvoYtdro4KhF1L17fyRSbON0Dhfqy8lENnnjiDn5cldsrYxbP7QuLAuuOBuL3RLXgmw/
        PzWh43VW6MuPVKUt3wtmPr8ALbkNJyB0681WPpd1ejEgIaqpWSCz2h3Xx7iEixV5mr3u3yjEUxU6tp9n
        t0kxv69138wVZNC5hs4EJXFo0QzQnwnyRkppK6UwlKWkU5yWZxPVaSfRZvE9UsholcUxyeUwpRw+nPRC
        SjhPRCSUY3aQSSV5lHJkui7dNk0QSCSRhOhanOCaDZAMkKliChup4UEkE4UDkRUqAMJ0QBEU+OK+ScID
        eytqGhKVtBTK40uSEfTG+S2baAW0TThzRmleRImMWY40rx91cEL/AGStTWTMiGfcEBJXg2yAuqZaijRD
        TOXILh0DwDcWRFRQl1s09s28d0c1d0eF3ALiQepVe8Tk/hLHghD8RSUuGE5a/DvV5T4eG9J3SPZkOoDg
        FYNhazRDTVrQ9rCc3aDnZD3yXxMruN/CgbEY3PaWWG6RYi18ll5tlZADuyyO4hm8xrfAtNlu/R5JNiCW
        PiQfDYuTHhyqpwT/AHR5zA7EKS7jE/c1JYRKLfvMGfeBzV3hO1m+LblyNSOjY9Ydf4jsWpmYs9tBWMp3
        RyOY0m+6C5ovmL2a4jI5LoYNVKUlCav1OFrfZccOOWbBJxrmuq+S8i0psXjf94X5HLwvke66NDweryWd
        jjjqmktsD7TRunPg5vPtyPAoOppqqnF2Eys/cBLhbmzMgdl1vcI96OPHVZkrcdy7r7GtLT2pOYCLEA56
        HNZnD9oiSQ8FpFxYg33uHYtBQyFzA7nb6+KWUGkaMGqhllUeoJWYIx2begerMeCoa6hfF9oZe0Mx4rZX
        TCL68yqXBM6cNTOHqjATaLOYnqvTMRwJkgJb0HdX2T2t+SwO0eETQ3L2Hd9tubPHh3qmcGjfh1EJ+jM+
        mOTrphVRqCYnZBJMj0XUo1HoJSSukStBlEmPTHVDRxTXVLeaKYWjoTJGo/DabfN+CuHYeLaKCbMq0oyn
        OSlro2tOi7R7rghuiVyDztuiKCG1ijBRhFQxAKieVFsYDxRMdmQjY4g1QsKe4qhzLNhMXKrq68DIFKqq
        rHdGp48uSqH0bnkOY08iPZPG3Vx6lTPI/I0Y8S/MA4lKZXOA5ZdxCjp8NkfblxV23BnbwcBu8xbLrVzS
        UrGZnXqVCU5SpIvlmjCPALg2FbpDnDRXr3boUAqQNAoJasFbIKOOPqYZuWR2cqZ7Ak8lganalgqnXyLN
        3ccbWt99vba/gtdVyt3XXdbI9S8dr6dznh+7c7zgDY3PSvf+EeJT4/ifI21xXQ9zoq8PAsb9Y0UjpM1m
        9kakejDXAjdABvlvEanXS60MxBVbugaSlRE+pzQ2MYeyqhdFJo7jxaRazgeBBUVTM0ZrsFZfLj9ZKiM2
        nyXPHa4POpX1OHykP3iy5DZW8QD94fQWkw3avesbi3Et4m+p8tFoqqkbI0tcMuN7LA4tsU5rjJSybpOe
        791dTBr64yc+p57WewlJuemlsfby/wAPQGYlHK0bwDr5C4vmdOw2BR8Urd0BtrCwFtMvyXi7cbmpzuTt
        IAy3m3t13Gq1WEbQEgFrg4cOXkuhDZkVxZwss8+knWeHzPRGlMacvBU0OLXNuWZz0sMgTz/TuPimv5fk
        ocGi+Gqhk/CFkpk7QRYgEHIgi4IOViEhIPj81yXT64JUi6T4dGZxjYqCQXiHoXk6i5ZlqCy+WXKypTsL
        IzMuY/MaXBz6iF6BJ1c/jl8UPuhzbOzFz23YbA5cbtullhjLqXQ12bE6TvtZm2bHiw6fD2P/ANJLXMkB
        GoSSe7Y+39ly9qan9f8AC+xjXSIWuqbNyU5jKDnivkki+ToyXBj8QxWXeNl3D8Sl3xe607cGac1N+x2D
        guh73BKtpz3o5t3uNHsy8lgJV/Nos/gDNxtleyS5LBJ27N0VSoy+LU7y/XJdooi3VHSygvsnTODeCz5M
        qjwaMeNyHxzWTfWhdQNYdTkoZIwSLXXNnJnRhBFrFOo3VZcbDLl1/qo4Ybdp0Vzh9G1vSOZ4KccZTdIT
        JKMFbB6PBhfekN/3efK6OqKhkY4NA7kHjuNMgY5zjovJ9odpXSyWe/dAOTQch4cV0YYoxVIwynKbuR6u
        3EmvF25jgdAhpKyy8kc57BvhxIOd7k/9KyotpHhtnOvbic8lTmhJK0X4drdM9NjrGONtFDVuaM1lMLxf
        fIyutAyS47eaxSk2qZr8NRdoIpntfbJMxTDfSNGYyOpGvUeHih2RuFyPzyR0bXkAO8j+SiDCa54BIcNE
        QFjYDrPwvZD1GJWJAz4AXP5G5VlPQAi5JPmhm0bAb2B7gVMmyIber5BoN5xu7j1WVhDBnYC2XefkETTM
        FsiO74XUjm/R+WihR8wlkvhDI2ZcPC6dLT3Gq62w0PwUhlAHyVqSKW35GXx/CWyNNwCeVrry95dSSkbv
        QJ0tm3sXuDpA7K/lmsttNs5HI0kAX4E5flmrMOXwpWivUaeGpxvHkRT4TijXNBaQRy59v1zWjpsTva5z
        /T9T4BeVVNLLSvJZlzB0IV/hGPtfYO6LuXyPFd3DqYZFyeF13snUaOTlj5j/AF+56NHW3H1x/QKV1XkR
        fn52Cy1NWcijDVX+uX62V2xGFayVcmmE+nioXPsOsOce0FxP5qmjr8x3/BOOJAgX68+9RsLfe4t8sMln
        z4+C6q31ocfh4JKdpDzIjLlU4jW7iPL1SYxSlxXNPcdQ7CsSDireWYWVNgWCvOi11Hgob9o3VU5pMeMW
        QYOHHhkrv0dxmusYGiwTHyKqWZssjiQLLEActVFuAdJyfNIGgk6qprKlx0CzSkascLI8RxF1+iOxWGFQ
        OLQ5w6R8kLhmGOJ35NOA5rQvGVhqqGvNl85JLaiudUAOcTYBo1JyU9BjLXxekBy3bhUG3tW2CDctdz2u
        FxwBy+fgvP8ABseLIjDewN7XAI7wt2mxOKbZjzzjKkgzbPaF0slr5XvrfMHJY2aAmQOLhuk7xz7yEbip
        JN9eCrJXbvWfILbHoZJdTVtrHOjsB0eHULKLCNxxLH88iqGlxKS1joiKabp3SThaaLY5KkmbnAyGvLQe
        ORtp5LTPncBkb8OH0Fl4I5BEHtAvx1v3c1Y4diBDembk6rlTXJ1Y8oso8Rc297/G3cpTjxa24zPDLXtC
        GhmY/ki2YdGQXeIGQ7VWhpKPmCMx+WbKOMnsNh4kIuGiq3ZkMaPZHzVZLj4ppN0x9DQEHMW5gLQYNtPH
        OBunqsSAb8b3+u1WrHatlM8u3iKJYaWUa27UR6M6k+ZRnpbjPwVbiNWGjX8x56JJQ2iRm5voNmcQcvP6
        uoDWHr7EIavIG9+r5HgUNO+9yMjx5H9Ul0XqPcOfWtdbw5Fp5c0PUzOtc8OvVVvpDexGfH8lD6d9zvEE
        dR17ggbYAbSwB7b/AHjnYLGy05aRfJeiRtaCd5oueJuPFZ3aPDyHb1rtPLMDvWjDk8inNiXUjwmpdkN4
        q7fWbmbvruWaw1xBty4q5rjdgK6GLU5Iur4OHq/Y+kyrc40/Tj/Ag41HzOlrWXBjkQAF3deWmeizjkxy
        0+9z9Dnr/wCf0q/V9f8ADWNxuD2/4HfJJZFJHvc/QP8AgNN3l9V9j1hmBH2x4KePA2/eN1HHVG+qNhqi
        eBPZ8VyveXLg9G9Nt5C4YQ0WAUpcqyXGI25XLneywFzvLTvQc2LPd96Knb7Ur2uk7mA2HeVfDDOSuqXr
        /wBv6GaefHF1dv0+/RfNlzI6wJJsBxKqpcXjJIYTKRwjaXjsLh0R3lAH1Z56dS2c/wDkkaW90YszyR7K
        llt1jmf7S2w7gh41H8spfJpff+gjk3fmjH5pv7L+SJxlfn6G3+uQN8mBya2KbN27Flzc7wvuo3O2Wfen
        tAaLuVE8238qXy+5oji3L8bfz+1A7NpKcG3o5LD+8aWkHh9m9/LgrPDKmGfe9FKHEWJaRZ7QdLg8Nc1X
        DZ6CZpeWejvclzXbmvHkdOIQ2BYTFSTundVMcNxzAAM7FzTdxGVxu8BxV0YY8qvbRRKU8brdZB/SFg1R
        UNa2Bu9Zp3gHMBJvkOkRlr4rx7FcFqoD/awSM5HduPebkvWdpaaifUenkkcS4Brm5tDSG9F2QDrWtx60
        FA+JxDLAtGQJcXCxIsbu7NeN81apbOC7Fpnmjus87pXEwdMZl1ru1sOXEqvkadMj2rc49g7W5MIPScDn
        u2GVgbqnGCF190EuHUbW6uatiynJCnRljdG4bTPc8dE8Mlo6PZ0ufubhJvnnkBbjlbVbPBcFbHbeDWkH
        XdDiOzlwzUSlwVqPJDs2JA3ddGQNLWJXZNlpHElp3bkkA62K1sLmMsL9Q60V6QWWCWPk3xz0uh51UYHU
        U7XPuCBn4dSjqNpBGyzbl2gA4k21V9tXijn/ANhCLl32ncAOXahsK2bjjsXa659fyIVVK+TRvbjb4PNa
        mnqJiXEu3td3Pwsidm8cMDixzSCfvi18rnMFesOwqPKwAtblc6k/FZjanZhhvLGLOFxbmDc+K0eKmtsl
        wZtnNxfJc4biD3DOTeDbWOlweY46o3FKcvYSBYjW31mqXZ+sY+NrCf7QEtd2hpdfzV0ytG7cnhn5LPOJ
        bGXYoYZLXac/jfj/ANIqhkNy12YOnw+v1Q8rmPO8CO7iR9ealj7e78xyVLRqu0TPgzH8LvyPUuPg6OYz
        +PgpYphbXTx0RbI3OYXAEjmBlmoabFcqM5WTFpyz71V4hiDiwi9uy10fjcm66wI3uAOp7FRTUkhN3Agd
        hA81ZiS6smbtUgClkO/qeu60E+bRxyVdFh3HXk0ce1O9FJyIHLRa1NXaMcscmqYLKFCVYsjH3he6grKe
        2itjNPgonicVYGkuFJWFZ7ScBZ+O/wAG/JSx4MwMfGZpHNkFj9kEdhtfl1ZdqpG10h+98E71qT2z4p1U
        eiS+SM8k5fibf7sOg2Spm6l7/wDW8u8tPJGwYNTs0awf7GD8lQPmfxcT3lRFxUyk5dW/qyI44x/Ckvkj
        Vmlg/d/h+SY6lpuLYz27qyL5HKMzOSKKLLZrBQUhOUbL/u9E/wANilPh8PCSSPsk3h4SbwWPe9xTvSOV
        ik6oreNXdHcfwaqlksypLmfdHpGssP8AS22akwnYOa5dJUZlrm2IdJbfFibONiQCUNc30RkFY9uhI7Cm
        3yqhfCV/+j6v+ixkhB9Zc0hoblEyxtxOd3OPEnNAt/o3qYL+r15A9l0fR8L/AAVrHjM40cUSzHJ+J8gk
        fPUthug7jwZOXZaqju6eRs3KwLQOq3JDU4eDuOyItm3Ia3t8VqcVx+RrcwD3FY+pxoOJ3oz3Ot+SWuw2
        9vqXkNWdHAAkWFuJ1VlFKQBujIC9rk5nr8VihjIGgk94fJFxYs1zbn0nRI4jQ/qPNQ02FmyjxEnI2B4N
        uD9FT0tLNNcEiNhHIl3UdclncMxOHXp5W4DjktTRYwywtvEdaXwk+pO+S6BFDsoGZmW5P/jF/wD7Iis2
        edI3dFQWdbWDe8STyHguHGhbJpPeVGccPAeR+aFhgvIHmyPqyOm2QLTc1czjcE5Rjl1cgAuzbHh2tTLm
        QTkzhyyyXf2s88bdyTat51cVPhw7B4uTuCwbAQMLnNnmBde5vHlvAA26PIJ0uw9KW7pmmyFspGjyDbI1
        jidSVO0I8OPYjxZ9ymi2IoWN3Q6Y9fpTe/PIAKWDZWmaLF0rza2859j4MACtk4KHjj2J8WfdlZTbNwMc
        XdJ987Pd0QeGTQL68Vb07N0boDAOTRYfBMXbIWNLoLKcpdWNmpInG5ijJ5kC/jZCz4TA7WFh7yPgEUmk
        IeOL6oFOS6NgQwSn09BGB1Oco5tnaV4s6Id0kgPxVhZcsjw49ifEn+p/Uov6l0V97cdf/wB55+JTajY2
        kd+IOx/zCvXBNIU7V2Bzk+rM1/UOl/Em99n8iS0aSki2ZaIqdOjpvq6mFN9XUgDuXHIr1X6uuil+roAr
        z2KNw6lZ+qJGk+slIFY2Mp4aeSsm0nYnijKYCrc1cDFbGj610UfWEEWVEcRU4Y7kVZtousJ/qnWPFQSZ
        /E4i5qzlRTWW/norjUeKqqjChzHihAYwwhE0UFyRb7TSPDpDzCvThP8Ap8URTYXYg3brzUgVdFR2zHEf
        qrWngIH6o6PDuseKJbRdnioCwNsZ+il6DirBtH2eKf6t2eKgAKOLrRcMSe2m7PFTNht/2gg7GEQxRtZ1
        hTNCCDoTwm3HUnNtzCgDt0iu2XLIARXLpELlkAIlNJXS1NIQBwlNJXS1RkIJFdJM3UkEnkjo5/x3+Kgq
        H1DSB6d+f7ySScU65tT+O/3lB6Spvb07/eSSQQD1FRUN1mf7yE/acxy9M/3ikkggmbNOc/TP94pjqqYf
        3z/fPzSSQBNHUzj+9ce03+KX7WlGrj4pJIJJ4MSc7LePiQppnPAuJH+8fmkkoYATqmT8R/vH5pCpf7bv
        eKSSkU760/8AEf7x+aXrMn4j/ePzSSUgdNS/23e8UvWZPxH+8fmupIA561J+I/3j80vW5PxH++75pJIA
        aayX8WT33fNRvxGb8aX/AJHfNJJBJLTYhOT/AOvL/wAj/minV04/xEv/ACP+aSShgJmJz/5mb/kf81IM
        TmH+Im/5H/NJJK2NEX7Xn/FlP/yu+ah/rBUg5SP75Xn811JCBhgxustf0rvff/MuMxutOk7h/ud+bkkk
        WTQ1+MVw/wAVL7yc3Ga61/WpPEfJcSU2FDDtHXD/ABT/AOH5JDamt/zLvBn8qSSLChf1srf8w73WfypJ
        JIsKP//Z
</value>
  </data>
</root>