<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>